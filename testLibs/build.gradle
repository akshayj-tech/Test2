plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst '**/*.so'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'

    implementation 'com.github.akshayj-tech:android-jsc:1.0'
    implementation 'com.github.akshayj-tech:community_checkbox:1.0'
    implementation 'com.github.akshayj-tech:react-native-0.67.2:1.0'
    implementation 'com.github.akshayj-tech:community_masked-view:1.0'
    implementation 'com.github.akshayj-tech:extra-dimensions-android:1.0'
    implementation 'com.github.akshayj-tech:gesture-handler:1.0'
    implementation 'com.github.akshayj-tech:pager-view:1.0'
    implementation 'com.github.akshayj-tech:reanimated:1.0'
    implementation 'com.github.akshayj-tech:safe-area-context:1.0'
    implementation 'com.github.akshayj-tech:screens:1.0'
    implementation 'com.github.akshayj-tech:svg:1.0'
    implementation 'com.github.akshayj-tech:vector-icons:1.0'
    implementation 'com.github.akshayj-tech:code-push:1.0'
    implementation 'com.github.akshayj-tech:fetch-blob:1.1'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.github.akshayj-tech'
                artifactId = 'react-native-dependencies'
                version = '1.7'
//                artifact "$buildDir/outputs/aar/testLibs-release.aar"
                //aar artifact you want to publish

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    configurations.implementation.allDependencies.each {

                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}
